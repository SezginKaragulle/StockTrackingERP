#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StockTrackingERP
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="StockTrackingERP")]
	public partial class L_StockTrackingERPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertDistrict(District instance);
    partial void UpdateDistrict(District instance);
    partial void DeleteDistrict(District instance);
    partial void InsertInvoicesCounter(InvoicesCounter instance);
    partial void UpdateInvoicesCounter(InvoicesCounter instance);
    partial void DeleteInvoicesCounter(InvoicesCounter instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProductType(ProductType instance);
    partial void UpdateProductType(ProductType instance);
    partial void DeleteProductType(ProductType instance);
    partial void InsertProvince(Province instance);
    partial void UpdateProvince(Province instance);
    partial void DeleteProvince(Province instance);
    partial void InsertStockActionCounter(StockActionCounter instance);
    partial void UpdateStockActionCounter(StockActionCounter instance);
    partial void DeleteStockActionCounter(StockActionCounter instance);
    partial void InsertStockAction(StockAction instance);
    partial void UpdateStockAction(StockAction instance);
    partial void DeleteStockAction(StockAction instance);
    partial void InsertStock(Stock instance);
    partial void UpdateStock(Stock instance);
    partial void DeleteStock(Stock instance);
    partial void InsertStore(Store instance);
    partial void UpdateStore(Store instance);
    partial void DeleteStore(Store instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertInvoicesDetail(InvoicesDetail instance);
    partial void UpdateInvoicesDetail(InvoicesDetail instance);
    partial void DeleteInvoicesDetail(InvoicesDetail instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertCurrentReceipt(CurrentReceipt instance);
    partial void UpdateCurrentReceipt(CurrentReceipt instance);
    partial void DeleteCurrentReceipt(CurrentReceipt instance);
    partial void InsertAccountingReceipt(AccountingReceipt instance);
    partial void UpdateAccountingReceipt(AccountingReceipt instance);
    partial void DeleteAccountingReceipt(AccountingReceipt instance);
    #endregion
		
		public L_StockTrackingERPDataContext() : 
				base(global::StockTrackingERP.Properties.Settings.Default.StockTrackingERPConnectionString4, mappingSource)
		{
			OnCreated();
		}
		
		public L_StockTrackingERPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public L_StockTrackingERPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public L_StockTrackingERPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public L_StockTrackingERPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<District> Districts
		{
			get
			{
				return this.GetTable<District>();
			}
		}
		
		public System.Data.Linq.Table<InvoicesCounter> InvoicesCounters
		{
			get
			{
				return this.GetTable<InvoicesCounter>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<ProductType> ProductTypes
		{
			get
			{
				return this.GetTable<ProductType>();
			}
		}
		
		public System.Data.Linq.Table<Province> Provinces
		{
			get
			{
				return this.GetTable<Province>();
			}
		}
		
		public System.Data.Linq.Table<StockActionCounter> StockActionCounters
		{
			get
			{
				return this.GetTable<StockActionCounter>();
			}
		}
		
		public System.Data.Linq.Table<StockActionDetail> StockActionDetails
		{
			get
			{
				return this.GetTable<StockActionDetail>();
			}
		}
		
		public System.Data.Linq.Table<StockAction> StockActions
		{
			get
			{
				return this.GetTable<StockAction>();
			}
		}
		
		public System.Data.Linq.Table<Stock> Stocks
		{
			get
			{
				return this.GetTable<Stock>();
			}
		}
		
		public System.Data.Linq.Table<Store> Stores
		{
			get
			{
				return this.GetTable<Store>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<StocksList> StocksLists
		{
			get
			{
				return this.GetTable<StocksList>();
			}
		}
		
		public System.Data.Linq.Table<v_District> v_Districts
		{
			get
			{
				return this.GetTable<v_District>();
			}
		}
		
		public System.Data.Linq.Table<v_Province> v_Provinces
		{
			get
			{
				return this.GetTable<v_Province>();
			}
		}
		
		public System.Data.Linq.Table<InvoicesDetail> InvoicesDetails
		{
			get
			{
				return this.GetTable<InvoicesDetail>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<CurrentReceipt> CurrentReceipts
		{
			get
			{
				return this.GetTable<CurrentReceipt>();
			}
		}
		
		public System.Data.Linq.Table<AccountingReceipt> AccountingReceipts
		{
			get
			{
				return this.GetTable<AccountingReceipt>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_CustomerSearch")]
		public ISingleResult<p_CustomerSearchResult> p_CustomerSearch([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrCustomerID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrCustomerTitle, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrTaxNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrCustomerID, vrCustomerTitle, vrTaxNumber);
			return ((ISingleResult<p_CustomerSearchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_CustomerSearch2")]
		public ISingleResult<p_CustomerSearch2Result> p_CustomerSearch2([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrCustomerID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrCustomerTitle)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrCustomerID, vrCustomerTitle);
			return ((ISingleResult<p_CustomerSearch2Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_CustomerSearchAction")]
		public ISingleResult<p_CustomerSearchActionResult> p_CustomerSearchAction([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vr_CustomerID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vr_CustomerID);
			return ((ISingleResult<p_CustomerSearchActionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_GeneralCodeInformationSearch")]
		public ISingleResult<p_GeneralCodeInformationSearchResult> p_GeneralCodeInformationSearch([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrSearchName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrGeneralCodeID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrGenelCodeName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrSearchName, vrGeneralCodeID, vrGenelCodeName);
			return ((ISingleResult<p_GeneralCodeInformationSearchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_GeneralCodeInformationSearch2")]
		public ISingleResult<p_GeneralCodeInformationSearch2Result> p_GeneralCodeInformationSearch2([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrGeneralCodeID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrGenelCodeName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrGeneralCodeID, vrGenelCodeName);
			return ((ISingleResult<p_GeneralCodeInformationSearch2Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_GeneralCodeInformationSearch3")]
		public ISingleResult<p_GeneralCodeInformationSearch3Result> p_GeneralCodeInformationSearch3([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrGeneralCodeID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrGenelCodeName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrGeneralCodeID, vrGenelCodeName);
			return ((ISingleResult<p_GeneralCodeInformationSearch3Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_InvoicesNextCount")]
		public ISingleResult<p_InvoicesNextCountResult> p_InvoicesNextCount([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrCountersID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrCountersID);
			return ((ISingleResult<p_InvoicesNextCountResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_ProductAdd")]
		public int p_ProductAdd([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrProductName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrProductType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrProductName, vrProductType);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_ProductCountSum")]
		public ISingleResult<p_ProductCountSumResult> p_ProductCountSum([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vrProductCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vrStoreID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrProductCode, vrStoreID);
			return ((ISingleResult<p_ProductCountSumResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_ProductDel")]
		public int p_ProductDel([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vr_ProductCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vr_ProductCode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_ProductSearch")]
		public ISingleResult<p_ProductSearchResult> p_ProductSearch([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrProductCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrProductName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrProductCode, vrProductName);
			return ((ISingleResult<p_ProductSearchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_ProductSearchAction")]
		public ISingleResult<p_ProductSearchActionResult> p_ProductSearchAction([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vr_ProductCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vr_ProductCode);
			return ((ISingleResult<p_ProductSearchActionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_ProductSearchAction2")]
		public ISingleResult<p_ProductSearchAction2Result> p_ProductSearchAction2([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vr_ProductCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vr_ProductCode);
			return ((ISingleResult<p_ProductSearchAction2Result>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_ProductStockCountControl")]
		public ISingleResult<p_ProductStockCountControlResult> p_ProductStockCountControl([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vr_ProductCode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vr_ProductCode);
			return ((ISingleResult<p_ProductStockCountControlResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_ProductUpdate")]
		public int p_ProductUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vrProductCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrProductName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrProductType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrProductCode, vrProductName, vrProductType);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_StockDetailsDelete")]
		public int p_StockDetailsDelete([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vrStockAction)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrStockAction);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_StocksAdd")]
		public int p_StocksAdd([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vrProductCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vrStoreID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vrProductCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrProductCode, vrStoreID, vrProductCount);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_StocksAddUpdate")]
		public int p_StocksAddUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vrProductCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vrStoreID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vrProductCount, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrProductChangeStatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrProductCode, vrStoreID, vrProductCount, vrProductChangeStatus);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_StoreAdd")]
		public int p_StoreAdd([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string vrStoreCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrStoreName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrStoreCode, vrStoreName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_StoreDelete")]
		public int p_StoreDelete([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vrStoreID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrStoreID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_StoreSearch")]
		public ISingleResult<p_StoreSearchResult> p_StoreSearch([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrStoreID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrStoreName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrStoreID, vrStoreName);
			return ((ISingleResult<p_StoreSearchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_StoreStockCountControl")]
		public ISingleResult<p_StoreStockCountControlResult> p_StoreStockCountControl([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vr_StoreID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vr_StoreID);
			return ((ISingleResult<p_StoreStockCountControlResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_StoreUpdate")]
		public int p_StoreUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vrStoreID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string vrStoreCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrStoreName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrStoreID, vrStoreCode, vrStoreName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_Users")]
		public ISingleResult<p_UsersResult> p_Users([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrUserCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrUserPassword)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrUserCode, vrUserPassword);
			return ((ISingleResult<p_UsersResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_UserSearch")]
		public ISingleResult<p_UserSearchResult> p_UserSearch([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrUserCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrNameSurName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrUserCode, vrNameSurName);
			return ((ISingleResult<p_UserSearchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_UsersList")]
		public ISingleResult<p_UsersListResult> p_UsersList()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<p_UsersListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StockActionDetailList")]
		public ISingleResult<StockActionDetailListResult> StockActionDetailList([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vr_StockAction)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vr_StockAction);
			return ((ISingleResult<StockActionDetailListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StockActionNo")]
		public int StockActionNo()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StockList")]
		public ISingleResult<StockListResult> StockList([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vr_StoreName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vr_StoreName);
			return ((ISingleResult<StockListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StockListSearch")]
		public ISingleResult<StockListSearchResult> StockListSearch([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vr_StockID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vr_ProductCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vr_ProductName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vr_StockID, vr_ProductCode, vr_ProductName);
			return ((ISingleResult<StockListSearchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StockProductProc")]
		public ISingleResult<StockProductProcResult> StockProductProc([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vr_ProductCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vr_StoreID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vr_ProductCode, vr_StoreID);
			return ((ISingleResult<StockProductProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StoreDel")]
		public int StoreDel([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vr_StoreID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vr_StoreID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TestProc")]
		public ISingleResult<TestProcResult> TestProc([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vr_ProductCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vr_StoreID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vr_ProductCode, vr_StoreID);
			return ((ISingleResult<TestProcResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.v_GeneralCodeInformationSearch")]
		public ISingleResult<v_GeneralCodeInformationSearchResult> v_GeneralCodeInformationSearch([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrSearchName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrGeneralCodeID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vrGenelCodeName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vrSearchName, vrGeneralCodeID, vrGenelCodeName);
			return ((ISingleResult<v_GeneralCodeInformationSearchResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_InvoicesDetailsList")]
		public ISingleResult<p_InvoicesDetailsListResult> p_InvoicesDetailsList([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vr_InvoiceNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vr_InvoiceNo);
			return ((ISingleResult<p_InvoicesDetailsListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_InvoicesSearchList")]
		public ISingleResult<p_InvoicesSearchListResult> p_InvoicesSearchList([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> vr_InvoiceDate1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> vr_InvoiceDate2, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vr_InvoiceNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vr_CustomerID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vr_CustomerName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vr_CurrentReceiptNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vr_AccountingReceiptNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vr_InvoiceDate1, vr_InvoiceDate2, vr_InvoiceNo, vr_CustomerID, vr_CustomerName, vr_CurrentReceiptNo, vr_AccountingReceiptNo);
			return ((ISingleResult<p_InvoicesSearchListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_InvoicesList")]
		public ISingleResult<p_InvoicesListResult> p_InvoicesList([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> vr_InvoiceDate1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> vr_InvoiceDate2)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vr_InvoiceDate1, vr_InvoiceDate2);
			return ((ISingleResult<p_InvoicesListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_CurrentReceiptsSearchList")]
		public ISingleResult<p_CurrentReceiptsSearchListResult> p_CurrentReceiptsSearchList([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> vr_ReceiptDate1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> vr_ReceiptDate2, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vr_ReceiptNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vr_CustomerID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vr_CurrentReceiptNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vr_ReceiptDate1, vr_ReceiptDate2, vr_ReceiptNo, vr_CustomerID, vr_CurrentReceiptNo);
			return ((ISingleResult<p_CurrentReceiptsSearchListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_CurrentAccountingNo")]
		public int p_CurrentAccountingNo([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vr_CustomerID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vr_CurrentAccountingStatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vr_CustomerID, vr_CurrentAccountingStatus);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_AccountingReceiptsSearchList")]
		public ISingleResult<p_AccountingReceiptsSearchListResult> p_AccountingReceiptsSearchList([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> vr_ReceiptDate1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> vr_ReceiptDate2, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vr_ReceiptNo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vr_AccountingReceiptNo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vr_ReceiptDate1, vr_ReceiptDate2, vr_ReceiptNo, vr_AccountingReceiptNo);
			return ((ISingleResult<p_AccountingReceiptsSearchListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.p_CurrentTopReceivableDebit")]
		public int p_CurrentTopReceivableDebit([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> vr_CustomerID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string vr_ReceivableDebit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vr_CustomerID, vr_ReceivableDebit);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Countries")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CountryID;
		
		private string _CountryName;
		
		private EntitySet<District> _Districts;
		
		private EntitySet<Province> _Provinces;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    #endregion
		
		public Country()
		{
			this._Districts = new EntitySet<District>(new Action<District>(this.attach_Districts), new Action<District>(this.detach_Districts));
			this._Provinces = new EntitySet<Province>(new Action<Province>(this.attach_Provinces), new Action<Province>(this.detach_Provinces));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(MAX)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_District", Storage="_Districts", ThisKey="CountryID", OtherKey="CountryID")]
		public EntitySet<District> Districts
		{
			get
			{
				return this._Districts;
			}
			set
			{
				this._Districts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Province", Storage="_Provinces", ThisKey="CountryID", OtherKey="CountryID")]
		public EntitySet<Province> Provinces
		{
			get
			{
				return this._Provinces;
			}
			set
			{
				this._Provinces.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Districts(District entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Districts(District entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
		
		private void attach_Provinces(Province entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_Provinces(Province entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private string _Title;
		
		private string _TaxAdministration;
		
		private System.Nullable<int> _TaxNumber;
		
		private string _Country;
		
		private string _Province;
		
		private string _District;
		
		private string _Adress;
		
		private string _Telephone;
		
		private string _Email;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntitySet<CurrentReceipt> _CurrentReceipts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnTaxAdministrationChanging(string value);
    partial void OnTaxAdministrationChanged();
    partial void OnTaxNumberChanging(System.Nullable<int> value);
    partial void OnTaxNumberChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    partial void OnDistrictChanging(string value);
    partial void OnDistrictChanged();
    partial void OnAdressChanging(string value);
    partial void OnAdressChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Customer()
		{
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._CurrentReceipts = new EntitySet<CurrentReceipt>(new Action<CurrentReceipt>(this.attach_CurrentReceipts), new Action<CurrentReceipt>(this.detach_CurrentReceipts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAdministration", DbType="NVarChar(100)")]
		public string TaxAdministration
		{
			get
			{
				return this._TaxAdministration;
			}
			set
			{
				if ((this._TaxAdministration != value))
				{
					this.OnTaxAdministrationChanging(value);
					this.SendPropertyChanging();
					this._TaxAdministration = value;
					this.SendPropertyChanged("TaxAdministration");
					this.OnTaxAdministrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxNumber", DbType="Int")]
		public System.Nullable<int> TaxNumber
		{
			get
			{
				return this._TaxNumber;
			}
			set
			{
				if ((this._TaxNumber != value))
				{
					this.OnTaxNumberChanging(value);
					this.SendPropertyChanging();
					this._TaxNumber = value;
					this.SendPropertyChanged("TaxNumber");
					this.OnTaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(100)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(100)")]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this.OnProvinceChanging(value);
					this.SendPropertyChanging();
					this._Province = value;
					this.SendPropertyChanged("Province");
					this.OnProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="NVarChar(100)")]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this.OnDistrictChanging(value);
					this.SendPropertyChanging();
					this._District = value;
					this.SendPropertyChanged("District");
					this.OnDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress", DbType="NVarChar(MAX)")]
		public string Adress
		{
			get
			{
				return this._Adress;
			}
			set
			{
				if ((this._Adress != value))
				{
					this.OnAdressChanging(value);
					this.SendPropertyChanging();
					this._Adress = value;
					this.SendPropertyChanged("Adress");
					this.OnAdressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Invoice", Storage="_Invoices", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CurrentReceipt", Storage="_CurrentReceipts", ThisKey="CustomerID", OtherKey="CustomerNo")]
		public EntitySet<CurrentReceipt> CurrentReceipts
		{
			get
			{
				return this._CurrentReceipts;
			}
			set
			{
				this._CurrentReceipts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_CurrentReceipts(CurrentReceipt entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CurrentReceipts(CurrentReceipt entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Districts")]
	public partial class District : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DistrictID;
		
		private string _DistrictName;
		
		private System.Nullable<int> _ProvinceID;
		
		private System.Nullable<int> _CountryID;
		
		private EntityRef<Country> _Country;
		
		private EntityRef<Province> _Province;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnDistrictNameChanging(string value);
    partial void OnDistrictNameChanged();
    partial void OnProvinceIDChanging(System.Nullable<int> value);
    partial void OnProvinceIDChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    #endregion
		
		public District()
		{
			this._Country = default(EntityRef<Country>);
			this._Province = default(EntityRef<Province>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="NVarChar(MAX)")]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this.OnDistrictNameChanging(value);
					this.SendPropertyChanging();
					this._DistrictName = value;
					this.SendPropertyChanged("DistrictName");
					this.OnDistrictNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceID", DbType="Int")]
		public System.Nullable<int> ProvinceID
		{
			get
			{
				return this._ProvinceID;
			}
			set
			{
				if ((this._ProvinceID != value))
				{
					if (this._Province.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProvinceIDChanging(value);
					this.SendPropertyChanging();
					this._ProvinceID = value;
					this.SendPropertyChanged("ProvinceID");
					this.OnProvinceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
		public System.Nullable<int> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_District", Storage="_Country", ThisKey="CountryID", OtherKey="CountryID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Districts.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Districts.Add(this);
						this._CountryID = value.CountryID;
					}
					else
					{
						this._CountryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Province_District", Storage="_Province", ThisKey="ProvinceID", OtherKey="ProvinceID", IsForeignKey=true)]
		public Province Province
		{
			get
			{
				return this._Province.Entity;
			}
			set
			{
				Province previousValue = this._Province.Entity;
				if (((previousValue != value) 
							|| (this._Province.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Province.Entity = null;
						previousValue.Districts.Remove(this);
					}
					this._Province.Entity = value;
					if ((value != null))
					{
						value.Districts.Add(this);
						this._ProvinceID = value.ProvinceID;
					}
					else
					{
						this._ProvinceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Province");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoicesCounter")]
	public partial class InvoicesCounter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CountersID;
		
		private System.Nullable<int> _CountersNo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountersIDChanging(int value);
    partial void OnCountersIDChanged();
    partial void OnCountersNoChanging(System.Nullable<int> value);
    partial void OnCountersNoChanged();
    #endregion
		
		public InvoicesCounter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountersID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CountersID
		{
			get
			{
				return this._CountersID;
			}
			set
			{
				if ((this._CountersID != value))
				{
					this.OnCountersIDChanging(value);
					this.SendPropertyChanging();
					this._CountersID = value;
					this.SendPropertyChanged("CountersID");
					this.OnCountersIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountersNo", DbType="Int")]
		public System.Nullable<int> CountersNo
		{
			get
			{
				return this._CountersNo;
			}
			set
			{
				if ((this._CountersNo != value))
				{
					this.OnCountersNoChanging(value);
					this.SendPropertyChanging();
					this._CountersNo = value;
					this.SendPropertyChanged("CountersNo");
					this.OnCountersNoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductCode;
		
		private string _ProductName;
		
		private string _ProductType;
		
		private EntitySet<Stock> _Stocks;
		
		private EntitySet<InvoicesDetail> _InvoicesDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductCodeChanging(int value);
    partial void OnProductCodeChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnProductTypeChanging(string value);
    partial void OnProductTypeChanged();
    #endregion
		
		public Product()
		{
			this._Stocks = new EntitySet<Stock>(new Action<Stock>(this.attach_Stocks), new Action<Stock>(this.detach_Stocks));
			this._InvoicesDetails = new EntitySet<InvoicesDetail>(new Action<InvoicesDetail>(this.attach_InvoicesDetails), new Action<InvoicesDetail>(this.detach_InvoicesDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this.OnProductCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductCode = value;
					this.SendPropertyChanged("ProductCode");
					this.OnProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(MAX)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductType", DbType="NVarChar(100)")]
		public string ProductType
		{
			get
			{
				return this._ProductType;
			}
			set
			{
				if ((this._ProductType != value))
				{
					this.OnProductTypeChanging(value);
					this.SendPropertyChanging();
					this._ProductType = value;
					this.SendPropertyChanged("ProductType");
					this.OnProductTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Stock", Storage="_Stocks", ThisKey="ProductCode", OtherKey="ProductCode")]
		public EntitySet<Stock> Stocks
		{
			get
			{
				return this._Stocks;
			}
			set
			{
				this._Stocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_InvoicesDetail", Storage="_InvoicesDetails", ThisKey="ProductCode", OtherKey="ProductCode")]
		public EntitySet<InvoicesDetail> InvoicesDetails
		{
			get
			{
				return this._InvoicesDetails;
			}
			set
			{
				this._InvoicesDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stocks(Stock entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Stocks(Stock entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_InvoicesDetails(InvoicesDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_InvoicesDetails(InvoicesDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductTypes")]
	public partial class ProductType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductTypeID;
		
		private string _ProductType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductTypeIDChanging(int value);
    partial void OnProductTypeIDChanged();
    partial void OnProductType1Changing(string value);
    partial void OnProductType1Changed();
    #endregion
		
		public ProductType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductTypeID
		{
			get
			{
				return this._ProductTypeID;
			}
			set
			{
				if ((this._ProductTypeID != value))
				{
					this.OnProductTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ProductTypeID = value;
					this.SendPropertyChanged("ProductTypeID");
					this.OnProductTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ProductType", Storage="_ProductType1", DbType="NVarChar(MAX)")]
		public string ProductType1
		{
			get
			{
				return this._ProductType1;
			}
			set
			{
				if ((this._ProductType1 != value))
				{
					this.OnProductType1Changing(value);
					this.SendPropertyChanging();
					this._ProductType1 = value;
					this.SendPropertyChanged("ProductType1");
					this.OnProductType1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Provinces")]
	public partial class Province : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProvinceID;
		
		private string _ProvinceCode;
		
		private string _ProvinceName;
		
		private System.Nullable<int> _CountryID;
		
		private EntitySet<District> _Districts;
		
		private EntityRef<Country> _Country;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProvinceIDChanging(int value);
    partial void OnProvinceIDChanged();
    partial void OnProvinceCodeChanging(string value);
    partial void OnProvinceCodeChanged();
    partial void OnProvinceNameChanging(string value);
    partial void OnProvinceNameChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    #endregion
		
		public Province()
		{
			this._Districts = new EntitySet<District>(new Action<District>(this.attach_Districts), new Action<District>(this.detach_Districts));
			this._Country = default(EntityRef<Country>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProvinceID
		{
			get
			{
				return this._ProvinceID;
			}
			set
			{
				if ((this._ProvinceID != value))
				{
					this.OnProvinceIDChanging(value);
					this.SendPropertyChanging();
					this._ProvinceID = value;
					this.SendPropertyChanged("ProvinceID");
					this.OnProvinceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceCode", DbType="NVarChar(100)")]
		public string ProvinceCode
		{
			get
			{
				return this._ProvinceCode;
			}
			set
			{
				if ((this._ProvinceCode != value))
				{
					this.OnProvinceCodeChanging(value);
					this.SendPropertyChanging();
					this._ProvinceCode = value;
					this.SendPropertyChanged("ProvinceCode");
					this.OnProvinceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceName", DbType="NVarChar(MAX)")]
		public string ProvinceName
		{
			get
			{
				return this._ProvinceName;
			}
			set
			{
				if ((this._ProvinceName != value))
				{
					this.OnProvinceNameChanging(value);
					this.SendPropertyChanging();
					this._ProvinceName = value;
					this.SendPropertyChanged("ProvinceName");
					this.OnProvinceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
		public System.Nullable<int> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Province_District", Storage="_Districts", ThisKey="ProvinceID", OtherKey="ProvinceID")]
		public EntitySet<District> Districts
		{
			get
			{
				return this._Districts;
			}
			set
			{
				this._Districts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_Province", Storage="_Country", ThisKey="CountryID", OtherKey="CountryID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.Provinces.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.Provinces.Add(this);
						this._CountryID = value.CountryID;
					}
					else
					{
						this._CountryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Districts(District entity)
		{
			this.SendPropertyChanging();
			entity.Province = this;
		}
		
		private void detach_Districts(District entity)
		{
			this.SendPropertyChanging();
			entity.Province = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StockActionCounter")]
	public partial class StockActionCounter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StockActionCounter1;
		
		private System.Nullable<int> _ActionCounter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStockActionCounter1Changing(int value);
    partial void OnStockActionCounter1Changed();
    partial void OnActionCounterChanging(System.Nullable<int> value);
    partial void OnActionCounterChanged();
    #endregion
		
		public StockActionCounter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="StockActionCounter", Storage="_StockActionCounter1", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StockActionCounter1
		{
			get
			{
				return this._StockActionCounter1;
			}
			set
			{
				if ((this._StockActionCounter1 != value))
				{
					this.OnStockActionCounter1Changing(value);
					this.SendPropertyChanging();
					this._StockActionCounter1 = value;
					this.SendPropertyChanged("StockActionCounter1");
					this.OnStockActionCounter1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionCounter", DbType="Int")]
		public System.Nullable<int> ActionCounter
		{
			get
			{
				return this._ActionCounter;
			}
			set
			{
				if ((this._ActionCounter != value))
				{
					this.OnActionCounterChanging(value);
					this.SendPropertyChanging();
					this._ActionCounter = value;
					this.SendPropertyChanged("ActionCounter");
					this.OnActionCounterChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StockActionDetails")]
	public partial class StockActionDetail
	{
		
		private int _StockAction;
		
		private System.Nullable<int> _ProductCode;
		
		private System.Nullable<int> _ProductCount;
		
		public StockActionDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockAction", DbType="Int NOT NULL")]
		public int StockAction
		{
			get
			{
				return this._StockAction;
			}
			set
			{
				if ((this._StockAction != value))
				{
					this._StockAction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="Int")]
		public System.Nullable<int> ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this._ProductCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCount", DbType="Int")]
		public System.Nullable<int> ProductCount
		{
			get
			{
				return this._ProductCount;
			}
			set
			{
				if ((this._ProductCount != value))
				{
					this._ProductCount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StockActions")]
	public partial class StockAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StockAction1;
		
		private System.Nullable<int> _StoreID;
		
		private System.Nullable<int> _WaybillNumber;
		
		private EntityRef<Store> _Store;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStockAction1Changing(int value);
    partial void OnStockAction1Changed();
    partial void OnStoreIDChanging(System.Nullable<int> value);
    partial void OnStoreIDChanged();
    partial void OnWaybillNumberChanging(System.Nullable<int> value);
    partial void OnWaybillNumberChanged();
    #endregion
		
		public StockAction()
		{
			this._Store = default(EntityRef<Store>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="StockAction", Storage="_StockAction1", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StockAction1
		{
			get
			{
				return this._StockAction1;
			}
			set
			{
				if ((this._StockAction1 != value))
				{
					this.OnStockAction1Changing(value);
					this.SendPropertyChanging();
					this._StockAction1 = value;
					this.SendPropertyChanged("StockAction1");
					this.OnStockAction1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", DbType="Int")]
		public System.Nullable<int> StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					if (this._Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaybillNumber", DbType="Int")]
		public System.Nullable<int> WaybillNumber
		{
			get
			{
				return this._WaybillNumber;
			}
			set
			{
				if ((this._WaybillNumber != value))
				{
					this.OnWaybillNumberChanging(value);
					this.SendPropertyChanging();
					this._WaybillNumber = value;
					this.SendPropertyChanged("WaybillNumber");
					this.OnWaybillNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_StockAction", Storage="_Store", ThisKey="StoreID", OtherKey="StoreID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.StockActions.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.StockActions.Add(this);
						this._StoreID = value.StoreID;
					}
					else
					{
						this._StoreID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stocks")]
	public partial class Stock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StockID;
		
		private System.Nullable<int> _ProductCode;
		
		private System.Nullable<int> _StoreID;
		
		private System.Nullable<int> _ProductCount;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Store> _Store;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStockIDChanging(int value);
    partial void OnStockIDChanged();
    partial void OnProductCodeChanging(System.Nullable<int> value);
    partial void OnProductCodeChanged();
    partial void OnStoreIDChanging(System.Nullable<int> value);
    partial void OnStoreIDChanged();
    partial void OnProductCountChanging(System.Nullable<int> value);
    partial void OnProductCountChanged();
    #endregion
		
		public Stock()
		{
			this._Product = default(EntityRef<Product>);
			this._Store = default(EntityRef<Store>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StockID
		{
			get
			{
				return this._StockID;
			}
			set
			{
				if ((this._StockID != value))
				{
					this.OnStockIDChanging(value);
					this.SendPropertyChanging();
					this._StockID = value;
					this.SendPropertyChanged("StockID");
					this.OnStockIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="Int")]
		public System.Nullable<int> ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductCode = value;
					this.SendPropertyChanged("ProductCode");
					this.OnProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", DbType="Int")]
		public System.Nullable<int> StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					if (this._Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCount", DbType="Int")]
		public System.Nullable<int> ProductCount
		{
			get
			{
				return this._ProductCount;
			}
			set
			{
				if ((this._ProductCount != value))
				{
					this.OnProductCountChanging(value);
					this.SendPropertyChanging();
					this._ProductCount = value;
					this.SendPropertyChanged("ProductCount");
					this.OnProductCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_Stock", Storage="_Product", ThisKey="ProductCode", OtherKey="ProductCode", IsForeignKey=true, DeleteRule="CASCADE")]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Stocks.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Stocks.Add(this);
						this._ProductCode = value.ProductCode;
					}
					else
					{
						this._ProductCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_Stock", Storage="_Store", ThisKey="StoreID", OtherKey="StoreID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.Stocks.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.Stocks.Add(this);
						this._StoreID = value.StoreID;
					}
					else
					{
						this._StoreID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stores")]
	public partial class Store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StoreID;
		
		private string _StoreCode;
		
		private string _StoreName;
		
		private EntitySet<StockAction> _StockActions;
		
		private EntitySet<Stock> _Stocks;
		
		private EntitySet<InvoicesDetail> _InvoicesDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStoreIDChanging(int value);
    partial void OnStoreIDChanged();
    partial void OnStoreCodeChanging(string value);
    partial void OnStoreCodeChanged();
    partial void OnStoreNameChanging(string value);
    partial void OnStoreNameChanged();
    #endregion
		
		public Store()
		{
			this._StockActions = new EntitySet<StockAction>(new Action<StockAction>(this.attach_StockActions), new Action<StockAction>(this.detach_StockActions));
			this._Stocks = new EntitySet<Stock>(new Action<Stock>(this.attach_Stocks), new Action<Stock>(this.detach_Stocks));
			this._InvoicesDetails = new EntitySet<InvoicesDetail>(new Action<InvoicesDetail>(this.attach_InvoicesDetails), new Action<InvoicesDetail>(this.detach_InvoicesDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreCode", DbType="NVarChar(50)")]
		public string StoreCode
		{
			get
			{
				return this._StoreCode;
			}
			set
			{
				if ((this._StoreCode != value))
				{
					this.OnStoreCodeChanging(value);
					this.SendPropertyChanging();
					this._StoreCode = value;
					this.SendPropertyChanged("StoreCode");
					this.OnStoreCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreName", DbType="NVarChar(MAX)")]
		public string StoreName
		{
			get
			{
				return this._StoreName;
			}
			set
			{
				if ((this._StoreName != value))
				{
					this.OnStoreNameChanging(value);
					this.SendPropertyChanging();
					this._StoreName = value;
					this.SendPropertyChanged("StoreName");
					this.OnStoreNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_StockAction", Storage="_StockActions", ThisKey="StoreID", OtherKey="StoreID")]
		public EntitySet<StockAction> StockActions
		{
			get
			{
				return this._StockActions;
			}
			set
			{
				this._StockActions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_Stock", Storage="_Stocks", ThisKey="StoreID", OtherKey="StoreID")]
		public EntitySet<Stock> Stocks
		{
			get
			{
				return this._Stocks;
			}
			set
			{
				this._Stocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_InvoicesDetail", Storage="_InvoicesDetails", ThisKey="StoreID", OtherKey="StoreID")]
		public EntitySet<InvoicesDetail> InvoicesDetails
		{
			get
			{
				return this._InvoicesDetails;
			}
			set
			{
				this._InvoicesDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StockActions(StockAction entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_StockActions(StockAction entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
		
		private void attach_Stocks(Stock entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_Stocks(Stock entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
		
		private void attach_InvoicesDetails(InvoicesDetail entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_InvoicesDetails(InvoicesDetail entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _UserCode;
		
		private string _UserPassword;
		
		private string _NameSurName;
		
		private string _EMail;
		
		private string _Telephone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserCodeChanging(string value);
    partial void OnUserCodeChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnNameSurNameChanging(string value);
    partial void OnNameSurNameChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(100)")]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="NVarChar(100)")]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameSurName", DbType="NVarChar(150)")]
		public string NameSurName
		{
			get
			{
				return this._NameSurName;
			}
			set
			{
				if ((this._NameSurName != value))
				{
					this.OnNameSurNameChanging(value);
					this.SendPropertyChanging();
					this._NameSurName = value;
					this.SendPropertyChanged("NameSurName");
					this.OnNameSurNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(50)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(100)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StocksList")]
	public partial class StocksList
	{
		
		private int _StockID;
		
		private System.Nullable<int> _ProductCode;
		
		private string _ProductName;
		
		private System.Nullable<int> _ProductCount;
		
		public StocksList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockID", DbType="Int NOT NULL")]
		public int StockID
		{
			get
			{
				return this._StockID;
			}
			set
			{
				if ((this._StockID != value))
				{
					this._StockID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="Int")]
		public System.Nullable<int> ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this._ProductCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(MAX)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCount", DbType="Int")]
		public System.Nullable<int> ProductCount
		{
			get
			{
				return this._ProductCount;
			}
			set
			{
				if ((this._ProductCount != value))
				{
					this._ProductCount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_Districts")]
	public partial class v_District
	{
		
		private int _DistrictID;
		
		private string _DistrictName;
		
		private System.Nullable<int> _ProvinceID;
		
		private string _ProvinceName;
		
		private int _CountryID;
		
		private string _CountryName;
		
		public v_District()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="NVarChar(MAX)")]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this._DistrictName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceID", DbType="Int")]
		public System.Nullable<int> ProvinceID
		{
			get
			{
				return this._ProvinceID;
			}
			set
			{
				if ((this._ProvinceID != value))
				{
					this._ProvinceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceName", DbType="NVarChar(MAX)")]
		public string ProvinceName
		{
			get
			{
				return this._ProvinceName;
			}
			set
			{
				if ((this._ProvinceName != value))
				{
					this._ProvinceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this._CountryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(MAX)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.v_Provinces")]
	public partial class v_Province
	{
		
		private int _ProvinceID;
		
		private string _ProvinceCode;
		
		private string _ProvinceName;
		
		private System.Nullable<int> _CountryID;
		
		private string _CountryName;
		
		public v_Province()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceID", DbType="Int NOT NULL")]
		public int ProvinceID
		{
			get
			{
				return this._ProvinceID;
			}
			set
			{
				if ((this._ProvinceID != value))
				{
					this._ProvinceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceCode", DbType="NVarChar(100)")]
		public string ProvinceCode
		{
			get
			{
				return this._ProvinceCode;
			}
			set
			{
				if ((this._ProvinceCode != value))
				{
					this._ProvinceCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceName", DbType="NVarChar(MAX)")]
		public string ProvinceName
		{
			get
			{
				return this._ProvinceName;
			}
			set
			{
				if ((this._ProvinceName != value))
				{
					this._ProvinceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
		public System.Nullable<int> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this._CountryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(MAX)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoicesDetails")]
	public partial class InvoicesDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceDetailsID;
		
		private System.Nullable<int> _InvoiceNo;
		
		private System.Nullable<int> _ProductCode;
		
		private System.Nullable<int> _ProductCount;
		
		private System.Nullable<decimal> _ProductTopAmount;
		
		private string _ProductExchange;
		
		private System.Nullable<decimal> _ProductTotalAmountNoVat;
		
		private System.Nullable<int> _ProductVatRate;
		
		private System.Nullable<decimal> _ProductVatAmount;
		
		private System.Nullable<int> _ProductDiscountRate;
		
		private System.Nullable<decimal> _ProductDiscountAmount;
		
		private System.Nullable<decimal> _ProductTLAmount;
		
		private System.Nullable<int> _StoreID;
		
		private System.Nullable<decimal> _ExchangeRate;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Store> _Store;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceDetailsIDChanging(int value);
    partial void OnInvoiceDetailsIDChanged();
    partial void OnInvoiceNoChanging(System.Nullable<int> value);
    partial void OnInvoiceNoChanged();
    partial void OnProductCodeChanging(System.Nullable<int> value);
    partial void OnProductCodeChanged();
    partial void OnProductCountChanging(System.Nullable<int> value);
    partial void OnProductCountChanged();
    partial void OnProductTopAmountChanging(System.Nullable<decimal> value);
    partial void OnProductTopAmountChanged();
    partial void OnProductExchangeChanging(string value);
    partial void OnProductExchangeChanged();
    partial void OnProductTotalAmountNoVatChanging(System.Nullable<decimal> value);
    partial void OnProductTotalAmountNoVatChanged();
    partial void OnProductVatRateChanging(System.Nullable<int> value);
    partial void OnProductVatRateChanged();
    partial void OnProductVatAmountChanging(System.Nullable<decimal> value);
    partial void OnProductVatAmountChanged();
    partial void OnProductDiscountRateChanging(System.Nullable<int> value);
    partial void OnProductDiscountRateChanged();
    partial void OnProductDiscountAmountChanging(System.Nullable<decimal> value);
    partial void OnProductDiscountAmountChanged();
    partial void OnProductTLAmountChanging(System.Nullable<decimal> value);
    partial void OnProductTLAmountChanged();
    partial void OnStoreIDChanging(System.Nullable<int> value);
    partial void OnStoreIDChanged();
    partial void OnExchangeRateChanging(System.Nullable<decimal> value);
    partial void OnExchangeRateChanged();
    #endregion
		
		public InvoicesDetail()
		{
			this._Product = default(EntityRef<Product>);
			this._Store = default(EntityRef<Store>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDetailsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceDetailsID
		{
			get
			{
				return this._InvoiceDetailsID;
			}
			set
			{
				if ((this._InvoiceDetailsID != value))
				{
					this.OnInvoiceDetailsIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDetailsID = value;
					this.SendPropertyChanged("InvoiceDetailsID");
					this.OnInvoiceDetailsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="Int")]
		public System.Nullable<int> InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="Int")]
		public System.Nullable<int> ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductCode = value;
					this.SendPropertyChanged("ProductCode");
					this.OnProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCount", DbType="Int")]
		public System.Nullable<int> ProductCount
		{
			get
			{
				return this._ProductCount;
			}
			set
			{
				if ((this._ProductCount != value))
				{
					this.OnProductCountChanging(value);
					this.SendPropertyChanging();
					this._ProductCount = value;
					this.SendPropertyChanged("ProductCount");
					this.OnProductCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTopAmount", DbType="Money")]
		public System.Nullable<decimal> ProductTopAmount
		{
			get
			{
				return this._ProductTopAmount;
			}
			set
			{
				if ((this._ProductTopAmount != value))
				{
					this.OnProductTopAmountChanging(value);
					this.SendPropertyChanging();
					this._ProductTopAmount = value;
					this.SendPropertyChanged("ProductTopAmount");
					this.OnProductTopAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductExchange", DbType="NVarChar(20)")]
		public string ProductExchange
		{
			get
			{
				return this._ProductExchange;
			}
			set
			{
				if ((this._ProductExchange != value))
				{
					this.OnProductExchangeChanging(value);
					this.SendPropertyChanging();
					this._ProductExchange = value;
					this.SendPropertyChanged("ProductExchange");
					this.OnProductExchangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTotalAmountNoVat", DbType="Money")]
		public System.Nullable<decimal> ProductTotalAmountNoVat
		{
			get
			{
				return this._ProductTotalAmountNoVat;
			}
			set
			{
				if ((this._ProductTotalAmountNoVat != value))
				{
					this.OnProductTotalAmountNoVatChanging(value);
					this.SendPropertyChanging();
					this._ProductTotalAmountNoVat = value;
					this.SendPropertyChanged("ProductTotalAmountNoVat");
					this.OnProductTotalAmountNoVatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductVatRate", DbType="Int")]
		public System.Nullable<int> ProductVatRate
		{
			get
			{
				return this._ProductVatRate;
			}
			set
			{
				if ((this._ProductVatRate != value))
				{
					this.OnProductVatRateChanging(value);
					this.SendPropertyChanging();
					this._ProductVatRate = value;
					this.SendPropertyChanged("ProductVatRate");
					this.OnProductVatRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductVatAmount", DbType="Money")]
		public System.Nullable<decimal> ProductVatAmount
		{
			get
			{
				return this._ProductVatAmount;
			}
			set
			{
				if ((this._ProductVatAmount != value))
				{
					this.OnProductVatAmountChanging(value);
					this.SendPropertyChanging();
					this._ProductVatAmount = value;
					this.SendPropertyChanged("ProductVatAmount");
					this.OnProductVatAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDiscountRate", DbType="Int")]
		public System.Nullable<int> ProductDiscountRate
		{
			get
			{
				return this._ProductDiscountRate;
			}
			set
			{
				if ((this._ProductDiscountRate != value))
				{
					this.OnProductDiscountRateChanging(value);
					this.SendPropertyChanging();
					this._ProductDiscountRate = value;
					this.SendPropertyChanged("ProductDiscountRate");
					this.OnProductDiscountRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDiscountAmount", DbType="Money")]
		public System.Nullable<decimal> ProductDiscountAmount
		{
			get
			{
				return this._ProductDiscountAmount;
			}
			set
			{
				if ((this._ProductDiscountAmount != value))
				{
					this.OnProductDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._ProductDiscountAmount = value;
					this.SendPropertyChanged("ProductDiscountAmount");
					this.OnProductDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTLAmount", DbType="Money")]
		public System.Nullable<decimal> ProductTLAmount
		{
			get
			{
				return this._ProductTLAmount;
			}
			set
			{
				if ((this._ProductTLAmount != value))
				{
					this.OnProductTLAmountChanging(value);
					this.SendPropertyChanging();
					this._ProductTLAmount = value;
					this.SendPropertyChanged("ProductTLAmount");
					this.OnProductTLAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", DbType="Int")]
		public System.Nullable<int> StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					if (this._Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRate", DbType="Money")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this.OnExchangeRateChanging(value);
					this.SendPropertyChanging();
					this._ExchangeRate = value;
					this.SendPropertyChanged("ExchangeRate");
					this.OnExchangeRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_InvoicesDetail", Storage="_Product", ThisKey="ProductCode", OtherKey="ProductCode", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.InvoicesDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.InvoicesDetails.Add(this);
						this._ProductCode = value.ProductCode;
					}
					else
					{
						this._ProductCode = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_InvoicesDetail", Storage="_Store", ThisKey="StoreID", OtherKey="StoreID", IsForeignKey=true)]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.InvoicesDetails.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.InvoicesDetails.Add(this);
						this._StoreID = value.StoreID;
					}
					else
					{
						this._StoreID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoices")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceNo;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private System.Nullable<int> _CustomerID;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private string _InvoiceExchange;
		
		private System.Nullable<decimal> _TotalAmountNoVat;
		
		private System.Nullable<decimal> _VatAmout;
		
		private System.Nullable<decimal> _DiscountAmount;
		
		private System.Nullable<decimal> _TLAmount;
		
		private System.Nullable<int> _PaymentDay;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<int> _CurrentReceiptNo;
		
		private System.Nullable<int> _AccountingReceiptNo;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceNoChanging(int value);
    partial void OnInvoiceNoChanged();
    partial void OnInvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvoiceDateChanged();
    partial void OnCustomerIDChanging(System.Nullable<int> value);
    partial void OnCustomerIDChanged();
    partial void OnTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalAmountChanged();
    partial void OnInvoiceExchangeChanging(string value);
    partial void OnInvoiceExchangeChanged();
    partial void OnTotalAmountNoVatChanging(System.Nullable<decimal> value);
    partial void OnTotalAmountNoVatChanged();
    partial void OnVatAmoutChanging(System.Nullable<decimal> value);
    partial void OnVatAmoutChanged();
    partial void OnDiscountAmountChanging(System.Nullable<decimal> value);
    partial void OnDiscountAmountChanged();
    partial void OnTLAmountChanging(System.Nullable<decimal> value);
    partial void OnTLAmountChanged();
    partial void OnPaymentDayChanging(System.Nullable<int> value);
    partial void OnPaymentDayChanged();
    partial void OnDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDueDateChanged();
    partial void OnCurrentReceiptNoChanging(System.Nullable<int> value);
    partial void OnCurrentReceiptNoChanged();
    partial void OnAccountingReceiptNoChanging(System.Nullable<int> value);
    partial void OnAccountingReceiptNoChanged();
    #endregion
		
		public Invoice()
		{
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this.OnInvoiceNoChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNo = value;
					this.SendPropertyChanged("InvoiceNo");
					this.OnInvoiceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Date")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Money")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceExchange", DbType="NVarChar(20)")]
		public string InvoiceExchange
		{
			get
			{
				return this._InvoiceExchange;
			}
			set
			{
				if ((this._InvoiceExchange != value))
				{
					this.OnInvoiceExchangeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceExchange = value;
					this.SendPropertyChanged("InvoiceExchange");
					this.OnInvoiceExchangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmountNoVat", DbType="Money")]
		public System.Nullable<decimal> TotalAmountNoVat
		{
			get
			{
				return this._TotalAmountNoVat;
			}
			set
			{
				if ((this._TotalAmountNoVat != value))
				{
					this.OnTotalAmountNoVatChanging(value);
					this.SendPropertyChanging();
					this._TotalAmountNoVat = value;
					this.SendPropertyChanged("TotalAmountNoVat");
					this.OnTotalAmountNoVatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatAmout", DbType="Money")]
		public System.Nullable<decimal> VatAmout
		{
			get
			{
				return this._VatAmout;
			}
			set
			{
				if ((this._VatAmout != value))
				{
					this.OnVatAmoutChanging(value);
					this.SendPropertyChanging();
					this._VatAmout = value;
					this.SendPropertyChanged("VatAmout");
					this.OnVatAmoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Money")]
		public System.Nullable<decimal> DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLAmount", DbType="Money")]
		public System.Nullable<decimal> TLAmount
		{
			get
			{
				return this._TLAmount;
			}
			set
			{
				if ((this._TLAmount != value))
				{
					this.OnTLAmountChanging(value);
					this.SendPropertyChanging();
					this._TLAmount = value;
					this.SendPropertyChanged("TLAmount");
					this.OnTLAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDay", DbType="Int")]
		public System.Nullable<int> PaymentDay
		{
			get
			{
				return this._PaymentDay;
			}
			set
			{
				if ((this._PaymentDay != value))
				{
					this.OnPaymentDayChanging(value);
					this.SendPropertyChanging();
					this._PaymentDay = value;
					this.SendPropertyChanged("PaymentDay");
					this.OnPaymentDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="Date")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentReceiptNo", DbType="Int")]
		public System.Nullable<int> CurrentReceiptNo
		{
			get
			{
				return this._CurrentReceiptNo;
			}
			set
			{
				if ((this._CurrentReceiptNo != value))
				{
					this.OnCurrentReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._CurrentReceiptNo = value;
					this.SendPropertyChanged("CurrentReceiptNo");
					this.OnCurrentReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountingReceiptNo", DbType="Int")]
		public System.Nullable<int> AccountingReceiptNo
		{
			get
			{
				return this._AccountingReceiptNo;
			}
			set
			{
				if ((this._AccountingReceiptNo != value))
				{
					this.OnAccountingReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._AccountingReceiptNo = value;
					this.SendPropertyChanged("AccountingReceiptNo");
					this.OnAccountingReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Invoice", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CurrentReceipts")]
	public partial class CurrentReceipt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReceiptNo;
		
		private System.Nullable<System.DateTime> _ReceiptDate;
		
		private string _ReceiptType;
		
		private System.Nullable<int> _CustomerNo;
		
		private System.Nullable<int> _DocumentNo;
		
		private System.Nullable<System.DateTime> _DocumentDate;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private string _ReceiptExchange;
		
		private System.Nullable<decimal> _TLAmount;
		
		private string _Explanation;
		
		private System.Nullable<int> _AccountingReceipt;
		
		private string _ApplicationCode;
		
		private string _ReceivableDebit;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReceiptNoChanging(int value);
    partial void OnReceiptNoChanged();
    partial void OnReceiptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceiptDateChanged();
    partial void OnReceiptTypeChanging(string value);
    partial void OnReceiptTypeChanged();
    partial void OnCustomerNoChanging(System.Nullable<int> value);
    partial void OnCustomerNoChanged();
    partial void OnDocumentNoChanging(System.Nullable<int> value);
    partial void OnDocumentNoChanged();
    partial void OnDocumentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDocumentDateChanged();
    partial void OnTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalAmountChanged();
    partial void OnReceiptExchangeChanging(string value);
    partial void OnReceiptExchangeChanged();
    partial void OnTLAmountChanging(System.Nullable<decimal> value);
    partial void OnTLAmountChanged();
    partial void OnExplanationChanging(string value);
    partial void OnExplanationChanged();
    partial void OnAccountingReceiptChanging(System.Nullable<int> value);
    partial void OnAccountingReceiptChanged();
    partial void OnApplicationCodeChanging(string value);
    partial void OnApplicationCodeChanged();
    partial void OnReceivableDebitChanging(string value);
    partial void OnReceivableDebitChanged();
    #endregion
		
		public CurrentReceipt()
		{
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReceiptNo
		{
			get
			{
				return this._ReceiptNo;
			}
			set
			{
				if ((this._ReceiptNo != value))
				{
					this.OnReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNo = value;
					this.SendPropertyChanged("ReceiptNo");
					this.OnReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptDate", DbType="Date")]
		public System.Nullable<System.DateTime> ReceiptDate
		{
			get
			{
				return this._ReceiptDate;
			}
			set
			{
				if ((this._ReceiptDate != value))
				{
					this.OnReceiptDateChanging(value);
					this.SendPropertyChanging();
					this._ReceiptDate = value;
					this.SendPropertyChanged("ReceiptDate");
					this.OnReceiptDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptType", DbType="NVarChar(MAX)")]
		public string ReceiptType
		{
			get
			{
				return this._ReceiptType;
			}
			set
			{
				if ((this._ReceiptType != value))
				{
					this.OnReceiptTypeChanging(value);
					this.SendPropertyChanging();
					this._ReceiptType = value;
					this.SendPropertyChanged("ReceiptType");
					this.OnReceiptTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNo", DbType="Int")]
		public System.Nullable<int> CustomerNo
		{
			get
			{
				return this._CustomerNo;
			}
			set
			{
				if ((this._CustomerNo != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerNoChanging(value);
					this.SendPropertyChanging();
					this._CustomerNo = value;
					this.SendPropertyChanged("CustomerNo");
					this.OnCustomerNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNo", DbType="Int")]
		public System.Nullable<int> DocumentNo
		{
			get
			{
				return this._DocumentNo;
			}
			set
			{
				if ((this._DocumentNo != value))
				{
					this.OnDocumentNoChanging(value);
					this.SendPropertyChanging();
					this._DocumentNo = value;
					this.SendPropertyChanged("DocumentNo");
					this.OnDocumentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentDate", DbType="Date")]
		public System.Nullable<System.DateTime> DocumentDate
		{
			get
			{
				return this._DocumentDate;
			}
			set
			{
				if ((this._DocumentDate != value))
				{
					this.OnDocumentDateChanging(value);
					this.SendPropertyChanging();
					this._DocumentDate = value;
					this.SendPropertyChanged("DocumentDate");
					this.OnDocumentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Money")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptExchange", DbType="NVarChar(MAX)")]
		public string ReceiptExchange
		{
			get
			{
				return this._ReceiptExchange;
			}
			set
			{
				if ((this._ReceiptExchange != value))
				{
					this.OnReceiptExchangeChanging(value);
					this.SendPropertyChanging();
					this._ReceiptExchange = value;
					this.SendPropertyChanged("ReceiptExchange");
					this.OnReceiptExchangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLAmount", DbType="Money")]
		public System.Nullable<decimal> TLAmount
		{
			get
			{
				return this._TLAmount;
			}
			set
			{
				if ((this._TLAmount != value))
				{
					this.OnTLAmountChanging(value);
					this.SendPropertyChanging();
					this._TLAmount = value;
					this.SendPropertyChanged("TLAmount");
					this.OnTLAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Explanation", DbType="NVarChar(MAX)")]
		public string Explanation
		{
			get
			{
				return this._Explanation;
			}
			set
			{
				if ((this._Explanation != value))
				{
					this.OnExplanationChanging(value);
					this.SendPropertyChanging();
					this._Explanation = value;
					this.SendPropertyChanged("Explanation");
					this.OnExplanationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountingReceipt", DbType="Int")]
		public System.Nullable<int> AccountingReceipt
		{
			get
			{
				return this._AccountingReceipt;
			}
			set
			{
				if ((this._AccountingReceipt != value))
				{
					this.OnAccountingReceiptChanging(value);
					this.SendPropertyChanging();
					this._AccountingReceipt = value;
					this.SendPropertyChanged("AccountingReceipt");
					this.OnAccountingReceiptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationCode", DbType="NVarChar(10)")]
		public string ApplicationCode
		{
			get
			{
				return this._ApplicationCode;
			}
			set
			{
				if ((this._ApplicationCode != value))
				{
					this.OnApplicationCodeChanging(value);
					this.SendPropertyChanging();
					this._ApplicationCode = value;
					this.SendPropertyChanged("ApplicationCode");
					this.OnApplicationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivableDebit", DbType="NVarChar(MAX)")]
		public string ReceivableDebit
		{
			get
			{
				return this._ReceivableDebit;
			}
			set
			{
				if ((this._ReceivableDebit != value))
				{
					this.OnReceivableDebitChanging(value);
					this.SendPropertyChanging();
					this._ReceivableDebit = value;
					this.SendPropertyChanged("ReceivableDebit");
					this.OnReceivableDebitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CurrentReceipt", Storage="_Customer", ThisKey="CustomerNo", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CurrentReceipts.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CurrentReceipts.Add(this);
						this._CustomerNo = value.CustomerID;
					}
					else
					{
						this._CustomerNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountingReceipts")]
	public partial class AccountingReceipt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReceiptNo;
		
		private System.Nullable<System.DateTime> _ReceiptDate;
		
		private string _ReceiptType;
		
		private System.Nullable<int> _DocumentNo;
		
		private System.Nullable<System.DateTime> _DocumentDate;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private string _ReceiptExchange;
		
		private System.Nullable<decimal> _TLAmount;
		
		private string _Explanation;
		
		private string _ApplicationCode;
		
		private string _ReceivableDebit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReceiptNoChanging(int value);
    partial void OnReceiptNoChanged();
    partial void OnReceiptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceiptDateChanged();
    partial void OnReceiptTypeChanging(string value);
    partial void OnReceiptTypeChanged();
    partial void OnDocumentNoChanging(System.Nullable<int> value);
    partial void OnDocumentNoChanged();
    partial void OnDocumentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDocumentDateChanged();
    partial void OnTotalAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalAmountChanged();
    partial void OnReceiptExchangeChanging(string value);
    partial void OnReceiptExchangeChanged();
    partial void OnTLAmountChanging(System.Nullable<decimal> value);
    partial void OnTLAmountChanged();
    partial void OnExplanationChanging(string value);
    partial void OnExplanationChanged();
    partial void OnApplicationCodeChanging(string value);
    partial void OnApplicationCodeChanged();
    partial void OnReceivableDebitChanging(string value);
    partial void OnReceivableDebitChanged();
    #endregion
		
		public AccountingReceipt()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReceiptNo
		{
			get
			{
				return this._ReceiptNo;
			}
			set
			{
				if ((this._ReceiptNo != value))
				{
					this.OnReceiptNoChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNo = value;
					this.SendPropertyChanged("ReceiptNo");
					this.OnReceiptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptDate", DbType="Date")]
		public System.Nullable<System.DateTime> ReceiptDate
		{
			get
			{
				return this._ReceiptDate;
			}
			set
			{
				if ((this._ReceiptDate != value))
				{
					this.OnReceiptDateChanging(value);
					this.SendPropertyChanging();
					this._ReceiptDate = value;
					this.SendPropertyChanged("ReceiptDate");
					this.OnReceiptDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptType", DbType="NVarChar(MAX)")]
		public string ReceiptType
		{
			get
			{
				return this._ReceiptType;
			}
			set
			{
				if ((this._ReceiptType != value))
				{
					this.OnReceiptTypeChanging(value);
					this.SendPropertyChanging();
					this._ReceiptType = value;
					this.SendPropertyChanged("ReceiptType");
					this.OnReceiptTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNo", DbType="Int")]
		public System.Nullable<int> DocumentNo
		{
			get
			{
				return this._DocumentNo;
			}
			set
			{
				if ((this._DocumentNo != value))
				{
					this.OnDocumentNoChanging(value);
					this.SendPropertyChanging();
					this._DocumentNo = value;
					this.SendPropertyChanged("DocumentNo");
					this.OnDocumentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentDate", DbType="Date")]
		public System.Nullable<System.DateTime> DocumentDate
		{
			get
			{
				return this._DocumentDate;
			}
			set
			{
				if ((this._DocumentDate != value))
				{
					this.OnDocumentDateChanging(value);
					this.SendPropertyChanging();
					this._DocumentDate = value;
					this.SendPropertyChanged("DocumentDate");
					this.OnDocumentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Money")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptExchange", DbType="NVarChar(10)")]
		public string ReceiptExchange
		{
			get
			{
				return this._ReceiptExchange;
			}
			set
			{
				if ((this._ReceiptExchange != value))
				{
					this.OnReceiptExchangeChanging(value);
					this.SendPropertyChanging();
					this._ReceiptExchange = value;
					this.SendPropertyChanged("ReceiptExchange");
					this.OnReceiptExchangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLAmount", DbType="Money")]
		public System.Nullable<decimal> TLAmount
		{
			get
			{
				return this._TLAmount;
			}
			set
			{
				if ((this._TLAmount != value))
				{
					this.OnTLAmountChanging(value);
					this.SendPropertyChanging();
					this._TLAmount = value;
					this.SendPropertyChanged("TLAmount");
					this.OnTLAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Explanation", DbType="NVarChar(MAX)")]
		public string Explanation
		{
			get
			{
				return this._Explanation;
			}
			set
			{
				if ((this._Explanation != value))
				{
					this.OnExplanationChanging(value);
					this.SendPropertyChanging();
					this._Explanation = value;
					this.SendPropertyChanged("Explanation");
					this.OnExplanationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationCode", DbType="NVarChar(10)")]
		public string ApplicationCode
		{
			get
			{
				return this._ApplicationCode;
			}
			set
			{
				if ((this._ApplicationCode != value))
				{
					this.OnApplicationCodeChanging(value);
					this.SendPropertyChanging();
					this._ApplicationCode = value;
					this.SendPropertyChanged("ApplicationCode");
					this.OnApplicationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivableDebit", DbType="NVarChar(100)")]
		public string ReceivableDebit
		{
			get
			{
				return this._ReceivableDebit;
			}
			set
			{
				if ((this._ReceivableDebit != value))
				{
					this.OnReceivableDebitChanging(value);
					this.SendPropertyChanging();
					this._ReceivableDebit = value;
					this.SendPropertyChanged("ReceivableDebit");
					this.OnReceivableDebitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class p_CustomerSearchResult
	{
		
		private int _CustomerID;
		
		private string _Title;
		
		private string _TaxAdministration;
		
		private System.Nullable<int> _TaxNumber;
		
		private string _Country;
		
		private string _Province;
		
		private string _District;
		
		private string _Adress;
		
		private string _Telephone;
		
		private string _Email;
		
		public p_CustomerSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this._CustomerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAdministration", DbType="NVarChar(100)")]
		public string TaxAdministration
		{
			get
			{
				return this._TaxAdministration;
			}
			set
			{
				if ((this._TaxAdministration != value))
				{
					this._TaxAdministration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxNumber", DbType="Int")]
		public System.Nullable<int> TaxNumber
		{
			get
			{
				return this._TaxNumber;
			}
			set
			{
				if ((this._TaxNumber != value))
				{
					this._TaxNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(100)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(100)")]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this._Province = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="NVarChar(100)")]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this._District = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress", DbType="NVarChar(MAX)")]
		public string Adress
		{
			get
			{
				return this._Adress;
			}
			set
			{
				if ((this._Adress != value))
				{
					this._Adress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this._Telephone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
	}
	
	public partial class p_CustomerSearch2Result
	{
		
		private int _CustomerID;
		
		private string _Title;
		
		private string _TaxAdministration;
		
		private System.Nullable<int> _TaxNumber;
		
		private string _Country;
		
		private string _Province;
		
		private string _District;
		
		private string _Adress;
		
		private string _Telephone;
		
		private string _Email;
		
		public p_CustomerSearch2Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this._CustomerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAdministration", DbType="NVarChar(100)")]
		public string TaxAdministration
		{
			get
			{
				return this._TaxAdministration;
			}
			set
			{
				if ((this._TaxAdministration != value))
				{
					this._TaxAdministration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxNumber", DbType="Int")]
		public System.Nullable<int> TaxNumber
		{
			get
			{
				return this._TaxNumber;
			}
			set
			{
				if ((this._TaxNumber != value))
				{
					this._TaxNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(100)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this._Country = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(100)")]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this._Province = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="NVarChar(100)")]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this._District = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adress", DbType="NVarChar(MAX)")]
		public string Adress
		{
			get
			{
				return this._Adress;
			}
			set
			{
				if ((this._Adress != value))
				{
					this._Adress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this._Telephone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
	}
	
	public partial class p_CustomerSearchActionResult
	{
		
		private string _Column1;
		
		public p_CustomerSearchActionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="NVarChar(MAX)")]
		public string Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class p_GeneralCodeInformationSearchResult
	{
		
		private int _CountryID;
		
		private string _CountryName;
		
		public p_GeneralCodeInformationSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this._CountryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(MAX)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
	}
	
	public partial class p_GeneralCodeInformationSearch2Result
	{
		
		private int _DistrictID;
		
		private string _DistrictName;
		
		private System.Nullable<int> _ProvinceID;
		
		private string _ProvinceName;
		
		private int _CountryID;
		
		private string _CountryName;
		
		public p_GeneralCodeInformationSearch2Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this._DistrictID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictName", DbType="NVarChar(MAX)")]
		public string DistrictName
		{
			get
			{
				return this._DistrictName;
			}
			set
			{
				if ((this._DistrictName != value))
				{
					this._DistrictName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceID", DbType="Int")]
		public System.Nullable<int> ProvinceID
		{
			get
			{
				return this._ProvinceID;
			}
			set
			{
				if ((this._ProvinceID != value))
				{
					this._ProvinceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceName", DbType="NVarChar(MAX)")]
		public string ProvinceName
		{
			get
			{
				return this._ProvinceName;
			}
			set
			{
				if ((this._ProvinceName != value))
				{
					this._ProvinceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this._CountryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(MAX)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
	}
	
	public partial class p_GeneralCodeInformationSearch3Result
	{
		
		private int _ProductTypeID;
		
		private string _ProductType;
		
		public p_GeneralCodeInformationSearch3Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTypeID", DbType="Int NOT NULL")]
		public int ProductTypeID
		{
			get
			{
				return this._ProductTypeID;
			}
			set
			{
				if ((this._ProductTypeID != value))
				{
					this._ProductTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductType", DbType="NVarChar(MAX)")]
		public string ProductType
		{
			get
			{
				return this._ProductType;
			}
			set
			{
				if ((this._ProductType != value))
				{
					this._ProductType = value;
				}
			}
		}
	}
	
	public partial class p_InvoicesNextCountResult
	{
		
		private System.Nullable<int> _CountersNo;
		
		public p_InvoicesNextCountResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountersNo", DbType="Int")]
		public System.Nullable<int> CountersNo
		{
			get
			{
				return this._CountersNo;
			}
			set
			{
				if ((this._CountersNo != value))
				{
					this._CountersNo = value;
				}
			}
		}
	}
	
	public partial class p_ProductCountSumResult
	{
		
		private System.Nullable<int> _Column1;
		
		public p_ProductCountSumResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class p_ProductSearchResult
	{
		
		private int _ProductCode;
		
		private string _ProductName;
		
		private string _ProductType;
		
		public p_ProductSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="Int NOT NULL")]
		public int ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this._ProductCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(MAX)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductType", DbType="NVarChar(100)")]
		public string ProductType
		{
			get
			{
				return this._ProductType;
			}
			set
			{
				if ((this._ProductType != value))
				{
					this._ProductType = value;
				}
			}
		}
	}
	
	public partial class p_ProductSearchActionResult
	{
		
		private string _Column1;
		
		public p_ProductSearchActionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="NVarChar(MAX)")]
		public string Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class p_ProductSearchAction2Result
	{
		
		private string _ProductName;
		
		public p_ProductSearchAction2Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(MAX)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
	}
	
	public partial class p_ProductStockCountControlResult
	{
		
		private System.Nullable<int> _Column1;
		
		public p_ProductStockCountControlResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class p_StoreSearchResult
	{
		
		private int _StoreID;
		
		private string _StoreCode;
		
		private string _StoreName;
		
		public p_StoreSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", DbType="Int NOT NULL")]
		public int StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					this._StoreID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreCode", DbType="NVarChar(50)")]
		public string StoreCode
		{
			get
			{
				return this._StoreCode;
			}
			set
			{
				if ((this._StoreCode != value))
				{
					this._StoreCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreName", DbType="NVarChar(MAX)")]
		public string StoreName
		{
			get
			{
				return this._StoreName;
			}
			set
			{
				if ((this._StoreName != value))
				{
					this._StoreName = value;
				}
			}
		}
	}
	
	public partial class p_StoreStockCountControlResult
	{
		
		private System.Nullable<int> _Column1;
		
		public p_StoreStockCountControlResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class p_UsersResult
	{
		
		private System.Nullable<int> _Column1;
		
		public p_UsersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class p_UserSearchResult
	{
		
		private int _UserID;
		
		private string _UserCode;
		
		private string _UserPassword;
		
		private string _NameSurName;
		
		private string _EMail;
		
		private string _Telephone;
		
		public p_UserSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(100)")]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this._UserCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="NVarChar(100)")]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this._UserPassword = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameSurName", DbType="NVarChar(150)")]
		public string NameSurName
		{
			get
			{
				return this._NameSurName;
			}
			set
			{
				if ((this._NameSurName != value))
				{
					this._NameSurName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(50)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this._EMail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(100)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this._Telephone = value;
				}
			}
		}
	}
	
	public partial class p_UsersListResult
	{
		
		private int _UserID;
		
		private string _UserCode;
		
		private string _NameSurName;
		
		private string _EMail;
		
		private string _Telephone;
		
		public p_UsersListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(100)")]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this._UserCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameSurName", DbType="NVarChar(150)")]
		public string NameSurName
		{
			get
			{
				return this._NameSurName;
			}
			set
			{
				if ((this._NameSurName != value))
				{
					this._NameSurName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(50)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this._EMail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(100)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this._Telephone = value;
				}
			}
		}
	}
	
	public partial class StockActionDetailListResult
	{
		
		private int _StockAction;
		
		private int _ProductCode;
		
		private string _ProductName;
		
		private System.Nullable<int> _ProductCount;
		
		public StockActionDetailListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockAction", DbType="Int NOT NULL")]
		public int StockAction
		{
			get
			{
				return this._StockAction;
			}
			set
			{
				if ((this._StockAction != value))
				{
					this._StockAction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="Int NOT NULL")]
		public int ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this._ProductCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(MAX)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCount", DbType="Int")]
		public System.Nullable<int> ProductCount
		{
			get
			{
				return this._ProductCount;
			}
			set
			{
				if ((this._ProductCount != value))
				{
					this._ProductCount = value;
				}
			}
		}
	}
	
	public partial class StockListResult
	{
		
		private int _StockID;
		
		private System.Nullable<int> _ProductCode;
		
		private string _ProductName;
		
		private System.Nullable<int> _ProductCount;
		
		public StockListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockID", DbType="Int NOT NULL")]
		public int StockID
		{
			get
			{
				return this._StockID;
			}
			set
			{
				if ((this._StockID != value))
				{
					this._StockID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="Int")]
		public System.Nullable<int> ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this._ProductCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(MAX)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCount", DbType="Int")]
		public System.Nullable<int> ProductCount
		{
			get
			{
				return this._ProductCount;
			}
			set
			{
				if ((this._ProductCount != value))
				{
					this._ProductCount = value;
				}
			}
		}
	}
	
	public partial class StockListSearchResult
	{
		
		private int _StockID;
		
		private System.Nullable<int> _ProductCode;
		
		private string _ProductName;
		
		private System.Nullable<int> _ProductCount;
		
		public StockListSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockID", DbType="Int NOT NULL")]
		public int StockID
		{
			get
			{
				return this._StockID;
			}
			set
			{
				if ((this._StockID != value))
				{
					this._StockID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="Int")]
		public System.Nullable<int> ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this._ProductCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(MAX)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCount", DbType="Int")]
		public System.Nullable<int> ProductCount
		{
			get
			{
				return this._ProductCount;
			}
			set
			{
				if ((this._ProductCount != value))
				{
					this._ProductCount = value;
				}
			}
		}
	}
	
	public partial class StockProductProcResult
	{
		
		private System.Nullable<int> _Column1;
		
		public StockProductProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class TestProcResult
	{
		
		private System.Nullable<int> _Column1;
		
		public TestProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class v_GeneralCodeInformationSearchResult
	{
		
		private int _CountryID;
		
		private string _CountryName;
		
		public v_GeneralCodeInformationSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this._CountryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="NVarChar(MAX)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this._CountryName = value;
				}
			}
		}
	}
	
	public partial class p_InvoicesDetailsListResult
	{
		
		private int _InvoiceDetailsID;
		
		private System.Nullable<int> _InvoiceNo;
		
		private System.Nullable<int> _ProductCode;
		
		private string _ProductName;
		
		private System.Nullable<int> _ProductCount;
		
		private System.Nullable<decimal> _ProductTopAmount;
		
		private string _ProductExchange;
		
		private System.Nullable<decimal> _ProductTotalAmountNoVat;
		
		private System.Nullable<int> _ProductVatRate;
		
		private System.Nullable<decimal> _ProductVatAmount;
		
		private System.Nullable<int> _ProductDiscountRate;
		
		private System.Nullable<decimal> _ProductDiscountAmount;
		
		private System.Nullable<decimal> _ProductTLAmount;
		
		private System.Nullable<int> _StoreID;
		
		private string _StoreName;
		
		private System.Nullable<decimal> _ExchangeRate;
		
		public p_InvoicesDetailsListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDetailsID", DbType="Int NOT NULL")]
		public int InvoiceDetailsID
		{
			get
			{
				return this._InvoiceDetailsID;
			}
			set
			{
				if ((this._InvoiceDetailsID != value))
				{
					this._InvoiceDetailsID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="Int")]
		public System.Nullable<int> InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="Int")]
		public System.Nullable<int> ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this._ProductCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(MAX)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCount", DbType="Int")]
		public System.Nullable<int> ProductCount
		{
			get
			{
				return this._ProductCount;
			}
			set
			{
				if ((this._ProductCount != value))
				{
					this._ProductCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTopAmount", DbType="Money")]
		public System.Nullable<decimal> ProductTopAmount
		{
			get
			{
				return this._ProductTopAmount;
			}
			set
			{
				if ((this._ProductTopAmount != value))
				{
					this._ProductTopAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductExchange", DbType="NVarChar(20)")]
		public string ProductExchange
		{
			get
			{
				return this._ProductExchange;
			}
			set
			{
				if ((this._ProductExchange != value))
				{
					this._ProductExchange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTotalAmountNoVat", DbType="Money")]
		public System.Nullable<decimal> ProductTotalAmountNoVat
		{
			get
			{
				return this._ProductTotalAmountNoVat;
			}
			set
			{
				if ((this._ProductTotalAmountNoVat != value))
				{
					this._ProductTotalAmountNoVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductVatRate", DbType="Int")]
		public System.Nullable<int> ProductVatRate
		{
			get
			{
				return this._ProductVatRate;
			}
			set
			{
				if ((this._ProductVatRate != value))
				{
					this._ProductVatRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductVatAmount", DbType="Money")]
		public System.Nullable<decimal> ProductVatAmount
		{
			get
			{
				return this._ProductVatAmount;
			}
			set
			{
				if ((this._ProductVatAmount != value))
				{
					this._ProductVatAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDiscountRate", DbType="Int")]
		public System.Nullable<int> ProductDiscountRate
		{
			get
			{
				return this._ProductDiscountRate;
			}
			set
			{
				if ((this._ProductDiscountRate != value))
				{
					this._ProductDiscountRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDiscountAmount", DbType="Money")]
		public System.Nullable<decimal> ProductDiscountAmount
		{
			get
			{
				return this._ProductDiscountAmount;
			}
			set
			{
				if ((this._ProductDiscountAmount != value))
				{
					this._ProductDiscountAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductTLAmount", DbType="Money")]
		public System.Nullable<decimal> ProductTLAmount
		{
			get
			{
				return this._ProductTLAmount;
			}
			set
			{
				if ((this._ProductTLAmount != value))
				{
					this._ProductTLAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", DbType="Int")]
		public System.Nullable<int> StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					this._StoreID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreName", DbType="NVarChar(MAX)")]
		public string StoreName
		{
			get
			{
				return this._StoreName;
			}
			set
			{
				if ((this._StoreName != value))
				{
					this._StoreName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeRate", DbType="Money")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this._ExchangeRate;
			}
			set
			{
				if ((this._ExchangeRate != value))
				{
					this._ExchangeRate = value;
				}
			}
		}
	}
	
	public partial class p_InvoicesSearchListResult
	{
		
		private int _InvoiceNo;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private System.Nullable<int> _CustomerID;
		
		private string _Title;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private string _InvoiceExchange;
		
		private System.Nullable<decimal> _TotalAmountNoVat;
		
		private System.Nullable<decimal> _VatAmout;
		
		private System.Nullable<decimal> _DiscountAmount;
		
		private System.Nullable<decimal> _TLAmount;
		
		private System.Nullable<int> _PaymentDay;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<int> _CurrentReceiptNo;
		
		private System.Nullable<int> _AccountingReceiptNo;
		
		public p_InvoicesSearchListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="Int NOT NULL")]
		public int InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Date")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this._CustomerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Money")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this._TotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceExchange", DbType="NVarChar(20)")]
		public string InvoiceExchange
		{
			get
			{
				return this._InvoiceExchange;
			}
			set
			{
				if ((this._InvoiceExchange != value))
				{
					this._InvoiceExchange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmountNoVat", DbType="Money")]
		public System.Nullable<decimal> TotalAmountNoVat
		{
			get
			{
				return this._TotalAmountNoVat;
			}
			set
			{
				if ((this._TotalAmountNoVat != value))
				{
					this._TotalAmountNoVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatAmout", DbType="Money")]
		public System.Nullable<decimal> VatAmout
		{
			get
			{
				return this._VatAmout;
			}
			set
			{
				if ((this._VatAmout != value))
				{
					this._VatAmout = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Money")]
		public System.Nullable<decimal> DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this._DiscountAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLAmount", DbType="Money")]
		public System.Nullable<decimal> TLAmount
		{
			get
			{
				return this._TLAmount;
			}
			set
			{
				if ((this._TLAmount != value))
				{
					this._TLAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDay", DbType="Int")]
		public System.Nullable<int> PaymentDay
		{
			get
			{
				return this._PaymentDay;
			}
			set
			{
				if ((this._PaymentDay != value))
				{
					this._PaymentDay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="Date")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this._DueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentReceiptNo", DbType="Int")]
		public System.Nullable<int> CurrentReceiptNo
		{
			get
			{
				return this._CurrentReceiptNo;
			}
			set
			{
				if ((this._CurrentReceiptNo != value))
				{
					this._CurrentReceiptNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountingReceiptNo", DbType="Int")]
		public System.Nullable<int> AccountingReceiptNo
		{
			get
			{
				return this._AccountingReceiptNo;
			}
			set
			{
				if ((this._AccountingReceiptNo != value))
				{
					this._AccountingReceiptNo = value;
				}
			}
		}
	}
	
	public partial class p_InvoicesListResult
	{
		
		private int _InvoiceNo;
		
		private System.Nullable<System.DateTime> _InvoiceDate;
		
		private System.Nullable<int> _CustomerID;
		
		private string _Title;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private string _InvoiceExchange;
		
		private System.Nullable<decimal> _TotalAmountNoVat;
		
		private System.Nullable<decimal> _VatAmout;
		
		private System.Nullable<decimal> _DiscountAmount;
		
		private System.Nullable<decimal> _TLAmount;
		
		private System.Nullable<int> _PaymentDay;
		
		private System.Nullable<System.DateTime> _DueDate;
		
		private System.Nullable<int> _CurrentReceiptNo;
		
		private System.Nullable<int> _AccountingReceiptNo;
		
		public p_InvoicesListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNo", DbType="Int NOT NULL")]
		public int InvoiceNo
		{
			get
			{
				return this._InvoiceNo;
			}
			set
			{
				if ((this._InvoiceNo != value))
				{
					this._InvoiceNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Date")]
		public System.Nullable<System.DateTime> InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this._InvoiceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int")]
		public System.Nullable<int> CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this._CustomerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Money")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this._TotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceExchange", DbType="NVarChar(20)")]
		public string InvoiceExchange
		{
			get
			{
				return this._InvoiceExchange;
			}
			set
			{
				if ((this._InvoiceExchange != value))
				{
					this._InvoiceExchange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmountNoVat", DbType="Money")]
		public System.Nullable<decimal> TotalAmountNoVat
		{
			get
			{
				return this._TotalAmountNoVat;
			}
			set
			{
				if ((this._TotalAmountNoVat != value))
				{
					this._TotalAmountNoVat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatAmout", DbType="Money")]
		public System.Nullable<decimal> VatAmout
		{
			get
			{
				return this._VatAmout;
			}
			set
			{
				if ((this._VatAmout != value))
				{
					this._VatAmout = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Money")]
		public System.Nullable<decimal> DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this._DiscountAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLAmount", DbType="Money")]
		public System.Nullable<decimal> TLAmount
		{
			get
			{
				return this._TLAmount;
			}
			set
			{
				if ((this._TLAmount != value))
				{
					this._TLAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDay", DbType="Int")]
		public System.Nullable<int> PaymentDay
		{
			get
			{
				return this._PaymentDay;
			}
			set
			{
				if ((this._PaymentDay != value))
				{
					this._PaymentDay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="Date")]
		public System.Nullable<System.DateTime> DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this._DueDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentReceiptNo", DbType="Int")]
		public System.Nullable<int> CurrentReceiptNo
		{
			get
			{
				return this._CurrentReceiptNo;
			}
			set
			{
				if ((this._CurrentReceiptNo != value))
				{
					this._CurrentReceiptNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountingReceiptNo", DbType="Int")]
		public System.Nullable<int> AccountingReceiptNo
		{
			get
			{
				return this._AccountingReceiptNo;
			}
			set
			{
				if ((this._AccountingReceiptNo != value))
				{
					this._AccountingReceiptNo = value;
				}
			}
		}
	}
	
	public partial class p_CurrentReceiptsSearchListResult
	{
		
		private int _ReceiptNo;
		
		private System.Nullable<System.DateTime> _ReceiptDate;
		
		private string _ReceiptType;
		
		private System.Nullable<int> _DocumentNo;
		
		private System.Nullable<System.DateTime> _DocumentDate;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private string _ReceiptExchange;
		
		private System.Nullable<decimal> _TLAmount;
		
		private string _Explanation;
		
		private System.Nullable<int> _AccountingReceipt;
		
		private string _ApplicationCode;
		
		private string _ReceivableDebit;
		
		public p_CurrentReceiptsSearchListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNo", DbType="Int NOT NULL")]
		public int ReceiptNo
		{
			get
			{
				return this._ReceiptNo;
			}
			set
			{
				if ((this._ReceiptNo != value))
				{
					this._ReceiptNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptDate", DbType="Date")]
		public System.Nullable<System.DateTime> ReceiptDate
		{
			get
			{
				return this._ReceiptDate;
			}
			set
			{
				if ((this._ReceiptDate != value))
				{
					this._ReceiptDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptType", DbType="NVarChar(MAX)")]
		public string ReceiptType
		{
			get
			{
				return this._ReceiptType;
			}
			set
			{
				if ((this._ReceiptType != value))
				{
					this._ReceiptType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNo", DbType="Int")]
		public System.Nullable<int> DocumentNo
		{
			get
			{
				return this._DocumentNo;
			}
			set
			{
				if ((this._DocumentNo != value))
				{
					this._DocumentNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentDate", DbType="Date")]
		public System.Nullable<System.DateTime> DocumentDate
		{
			get
			{
				return this._DocumentDate;
			}
			set
			{
				if ((this._DocumentDate != value))
				{
					this._DocumentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Money")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this._TotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptExchange", DbType="NVarChar(MAX)")]
		public string ReceiptExchange
		{
			get
			{
				return this._ReceiptExchange;
			}
			set
			{
				if ((this._ReceiptExchange != value))
				{
					this._ReceiptExchange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLAmount", DbType="Money")]
		public System.Nullable<decimal> TLAmount
		{
			get
			{
				return this._TLAmount;
			}
			set
			{
				if ((this._TLAmount != value))
				{
					this._TLAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Explanation", DbType="NVarChar(MAX)")]
		public string Explanation
		{
			get
			{
				return this._Explanation;
			}
			set
			{
				if ((this._Explanation != value))
				{
					this._Explanation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountingReceipt", DbType="Int")]
		public System.Nullable<int> AccountingReceipt
		{
			get
			{
				return this._AccountingReceipt;
			}
			set
			{
				if ((this._AccountingReceipt != value))
				{
					this._AccountingReceipt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationCode", DbType="NVarChar(10)")]
		public string ApplicationCode
		{
			get
			{
				return this._ApplicationCode;
			}
			set
			{
				if ((this._ApplicationCode != value))
				{
					this._ApplicationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivableDebit", DbType="NVarChar(MAX)")]
		public string ReceivableDebit
		{
			get
			{
				return this._ReceivableDebit;
			}
			set
			{
				if ((this._ReceivableDebit != value))
				{
					this._ReceivableDebit = value;
				}
			}
		}
	}
	
	public partial class p_AccountingReceiptsSearchListResult
	{
		
		private int _ReceiptNo;
		
		private System.Nullable<System.DateTime> _ReceiptDate;
		
		private string _ReceiptType;
		
		private System.Nullable<int> _DocumentNo;
		
		private System.Nullable<System.DateTime> _DocumentDate;
		
		private System.Nullable<decimal> _TotalAmount;
		
		private string _ReceiptExchange;
		
		private System.Nullable<decimal> _TLAmount;
		
		private string _Explanation;
		
		private string _ApplicationCode;
		
		private string _ReceivableDebit;
		
		public p_AccountingReceiptsSearchListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNo", DbType="Int NOT NULL")]
		public int ReceiptNo
		{
			get
			{
				return this._ReceiptNo;
			}
			set
			{
				if ((this._ReceiptNo != value))
				{
					this._ReceiptNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptDate", DbType="Date")]
		public System.Nullable<System.DateTime> ReceiptDate
		{
			get
			{
				return this._ReceiptDate;
			}
			set
			{
				if ((this._ReceiptDate != value))
				{
					this._ReceiptDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptType", DbType="NVarChar(MAX)")]
		public string ReceiptType
		{
			get
			{
				return this._ReceiptType;
			}
			set
			{
				if ((this._ReceiptType != value))
				{
					this._ReceiptType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNo", DbType="Int")]
		public System.Nullable<int> DocumentNo
		{
			get
			{
				return this._DocumentNo;
			}
			set
			{
				if ((this._DocumentNo != value))
				{
					this._DocumentNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentDate", DbType="Date")]
		public System.Nullable<System.DateTime> DocumentDate
		{
			get
			{
				return this._DocumentDate;
			}
			set
			{
				if ((this._DocumentDate != value))
				{
					this._DocumentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Money")]
		public System.Nullable<decimal> TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this._TotalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptExchange", DbType="NVarChar(10)")]
		public string ReceiptExchange
		{
			get
			{
				return this._ReceiptExchange;
			}
			set
			{
				if ((this._ReceiptExchange != value))
				{
					this._ReceiptExchange = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TLAmount", DbType="Money")]
		public System.Nullable<decimal> TLAmount
		{
			get
			{
				return this._TLAmount;
			}
			set
			{
				if ((this._TLAmount != value))
				{
					this._TLAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Explanation", DbType="NVarChar(MAX)")]
		public string Explanation
		{
			get
			{
				return this._Explanation;
			}
			set
			{
				if ((this._Explanation != value))
				{
					this._Explanation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationCode", DbType="NVarChar(10)")]
		public string ApplicationCode
		{
			get
			{
				return this._ApplicationCode;
			}
			set
			{
				if ((this._ApplicationCode != value))
				{
					this._ApplicationCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivableDebit", DbType="NVarChar(100)")]
		public string ReceivableDebit
		{
			get
			{
				return this._ReceivableDebit;
			}
			set
			{
				if ((this._ReceivableDebit != value))
				{
					this._ReceivableDebit = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
